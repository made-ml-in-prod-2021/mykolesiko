INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None), model_params=ModelParams(model_type='RandomForestClassifier'), metric_params=['accuracy', 'roc_auc'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: data.shape is (303, 14)
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None)
INFO: train_data.shape is (242, 28)
INFO: val_data.shape is (61, 28)
INFO: created model  ModelParams(model_type='RandomForestClassifier')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8524590163934426}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None), model_params=ModelParams(model_type='RandomForestClassifier'), metric_params=['accuracy', 'roc_auc'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: data.shape is (303, 14)
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None)
INFO: train_data.shape is (242, 28)
INFO: val_data.shape is (61, 28)
INFO: created model  ModelParams(model_type='RandomForestClassifier')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8852459016393442}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None), model_params=ModelParams(model_type='RandomForestClassifier'), metric_params=['accuracy', 'roc_auc'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: data.shape is (303, 14)
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None)
INFO: train_data.shape is (242, 28)
INFO: val_data.shape is (61, 28)
INFO: created model  ModelParams(model_type='RandomForestClassifier')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8852459016393442}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None), model_params=ModelParams(model_type='RandomForestClassifier'), metric_params=['accuracy', 'roc_auc'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: data.shape is (303, 14)
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None)
INFO: train_data.shape is (242, 28)
INFO: val_data.shape is (61, 28)
INFO: created model  ModelParams(model_type='RandomForestClassifier')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8852459016393442}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None), model_params=ModelParams(model_type='RandomForestClassifier'), metric_params=['accuracy', 'roc_auc'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None), model_params=ModelParams(model_type='RandomForestClassifier'), metric_params=['accuracy', 'roc_auc'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: data.shape is (303, 14)
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None)
INFO: train_data.shape is (242, 28)
INFO: val_data.shape is (61, 28)
INFO: created model  ModelParams(model_type='RandomForestClassifier')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None), model_params=ModelParams(model_type='RandomForestClassifier'), metric_params=['accuracy', 'roc_auc'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: data.shape is (303, 14)
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None)
INFO: train_data.shape is (242, 28)
INFO: val_data.shape is (61, 28)
INFO: created model  ModelParams(model_type='RandomForestClassifier')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8852459016393442}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None), model_params=ModelParams(model_type='RandomForestClassifier'), metric_params=['accuracy', 'roc_auc'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: data.shape is (303, 14)
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None)
INFO: train_data.shape is (242, 28)
INFO: val_data.shape is (61, 28)
INFO: created model  ModelParams(model_type='RandomForestClassifier')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None), model_params=ModelParams(model_type='RandomForestClassifier'), metric_params=['accuracy', 'roc_auc'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: data.shape is (303, 14)
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None)
INFO: train_data.shape is (242, 28)
INFO: val_data.shape is (61, 28)
INFO: created model  ModelParams(model_type='RandomForestClassifier')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None), model_params=ModelParams(model_type='RandomForestClassifier'), metric_params=['accuracy', 'roc_auc'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: data.shape is (303, 14)
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None)
INFO: train_data.shape is (242, 28)
INFO: val_data.shape is (61, 28)
INFO: created model  ModelParams(model_type='RandomForestClassifier')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None), model_params=ModelParams(model_type='RandomForestClassifier'), metric_params=['accuracy', 'roc_auc'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: data.shape is (303, 14)
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None)
INFO: train_data.shape is (242, 28)
INFO: val_data.shape is (61, 28)
INFO: created model  ModelParams(model_type='RandomForestClassifier')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8524590163934426}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None), model_params=ModelParams(model_type='RandomForestClassifier'), metric_params=['accuracy', 'roc_auc'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: data.shape is (303, 14)
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None)
INFO: train_data.shape is (242, 28)
INFO: val_data.shape is (61, 28)
INFO: created model  ModelParams(model_type='RandomForestClassifier')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8524590163934426}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None), model_params=ModelParams(model_type='RandomForestClassifier'), metric_params=['accuracy', 'roc_auc'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: data.shape is (303, 14)
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None)
INFO: train_data.shape is (242, 28)
INFO: val_data.shape is (61, 28)
INFO: created model  ModelParams(model_type='RandomForestClassifier')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None), model_params=ModelParams(model_type='RandomForestClassifier'), metric_params=['accuracy', 'roc_auc'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: data.shape is (303, 14)
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None)
INFO: train_data.shape is (242, 28)
INFO: val_data.shape is (61, 28)
INFO: created model  ModelParams(model_type='RandomForestClassifier')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8852459016393442}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None), model_params=ModelParams(model_type='RandomForestClassifier'), metric_params=['accuracy', 'roc_auc'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: data.shape is (303, 14)
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None)
INFO: train_data.shape is (242, 28)
INFO: val_data.shape is (61, 28)
INFO: created model  ModelParams(model_type='RandomForestClassifier')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None)
INFO: train model
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None)
INFO: train model
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None)
INFO: train model
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None)
INFO: train model
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None)
INFO: train model
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None)
INFO: train model
INFO: predict values
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None)
INFO: train model
INFO: predict values
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None)
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.8685344827586206, 'f1': 0.875}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None)
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8524590163934426, 'roc_auc': 0.8529094827586207, 'f1': 0.8571428571428571}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=None, solver=None)
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8852459016393442, 'roc_auc': 0.8841594827586207, 'f1': 0.8923076923076922}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=200, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=200, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.8685344827586206, 'f1': 0.875}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=200, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=200, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.8685344827586206, 'f1': 0.875}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8524590163934426, 'roc_auc': 0.8529094827586207, 'f1': 0.8571428571428571}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8852459016393442, 'roc_auc': 0.8841594827586207, 'f1': 0.8923076923076922}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=400, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=400, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8360655737704918, 'roc_auc': 0.8372844827586207, 'f1': 0.8387096774193549}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=350, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=350, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8524590163934426, 'roc_auc': 0.8529094827586207, 'f1': 0.8571428571428571}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=None)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.8685344827586206, 'f1': 0.875}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=True), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.8685344827586206, 'f1': 0.875}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=True), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.8685344827586206, 'f1': 0.875}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.3, random_state=21, stratify='target', shuffle=True), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.3, random_state=21, stratify='target', shuffle=True)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.7912087912087912, 'roc_auc': 0.7880487804878048, 'f1': 0.8118811881188118}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.8652597402597402, 'f1': 0.8823529411764706}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=21, stratify=None, shuffle=True), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=21, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8032786885245902, 'roc_auc': 0.7995689655172413, 'f1': 0.7777777777777777}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8852459016393442, 'roc_auc': 0.8804112554112554, 'f1': 0.8985507246376813}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.8625541125541125, 'f1': 0.8857142857142858}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=100, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.8625541125541125, 'f1': 0.8857142857142858}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8852459016393442, 'roc_auc': 0.8804112554112554, 'f1': 0.8985507246376813}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8852459016393442, 'roc_auc': 0.8804112554112554, 'f1': 0.8985507246376813}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8524590163934426, 'roc_auc': 0.8446969696969697, 'f1': 0.8732394366197183}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.8625541125541125, 'f1': 0.8857142857142858}
INFO: start train pipeline with params TrainingConfigParams(model_folder='RandomForest', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True), model_params=ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True)
INFO: created model  ModelParams(model_type='RandomForestClassifier', n_estimators=300, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.8625541125541125, 'f1': 0.8857142857142858}
