INFO: start train pipeline with params TrainingConfigParams(model_folder='logreg', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=42, stratify=None), model_params=ModelParams(model_type='LogisticRegression'), metric_params=['accuracy', 'roc_auc'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: data.shape is (303, 14)
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=42, stratify=None)
INFO: train_data.shape is (242, 28)
INFO: val_data.shape is (61, 28)
INFO: created model  ModelParams(model_type='LogisticRegression')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8852459016393442}
INFO: start train pipeline with params TrainingConfigParams(model_folder='LogReg', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=21, stratify=None, shuffle=True), model_params=ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=21, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.8669181034482759, 'f1': 0.8571428571428572}
INFO: start train pipeline with params TrainingConfigParams(model_folder='LogReg', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=21, stratify=None, shuffle=True), model_params=ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='saga'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=21, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='saga')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.7213114754098361, 'roc_auc': 0.7198275862068966, 'f1': 0.7017543859649122}
INFO: start train pipeline with params TrainingConfigParams(model_folder='LogReg', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=21, stratify=None, shuffle=True), model_params=ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=300, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=21, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=300, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.8669181034482759, 'f1': 0.8571428571428572}
INFO: start train pipeline with params TrainingConfigParams(model_folder='LogReg', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True), model_params=ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=21, stratify='target', shuffle=True)
INFO: created model  ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8524590163934426, 'roc_auc': 0.8474025974025974, 'f1': 0.8695652173913043}
INFO: start train pipeline with params TrainingConfigParams(model_folder='LogReg', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=21, stratify=None, shuffle=True), model_params=ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=21, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.8669181034482759, 'f1': 0.8571428571428572}
INFO: start train pipeline with params TrainingConfigParams(model_folder='LogReg', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True), model_params=ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8032786885245902, 'roc_auc': 0.8006535947712419, 'f1': 0.8235294117647058}
INFO: start train pipeline with params TrainingConfigParams(model_folder='LogReg', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True), model_params=ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8524590163934426, 'roc_auc': 0.8761904761904762, 'f1': 0.8767123287671234}
INFO: start train pipeline with params TrainingConfigParams(model_folder='LogReg', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True), model_params=ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.9016393442622951, 'roc_auc': 0.9030172413793103, 'f1': 0.9032258064516129}
INFO: start train pipeline with params TrainingConfigParams(model_folder='LogReg', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True), model_params=ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8032786885245902, 'roc_auc': 0.8088888888888888, 'f1': 0.823529411764706}
INFO: start train pipeline with params TrainingConfigParams(model_folder='LogReg', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True), model_params=ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8524590163934426, 'roc_auc': 0.8464439655172413, 'f1': 0.8732394366197183}
INFO: start train pipeline with params TrainingConfigParams(model_folder='LogReg', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True), model_params=ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.8698924731182796, 'f1': 0.8749999999999999}
INFO: start train pipeline with params TrainingConfigParams(model_folder='LogReg', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True), model_params=ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.867741935483871, 'f1': 0.8787878787878788}
INFO: start train pipeline with params TrainingConfigParams(model_folder='LogReg', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True), model_params=ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.8560439560439559, 'f1': 0.8918918918918919}
INFO: start train pipeline with params TrainingConfigParams(model_folder='LogReg', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True), model_params=ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8360655737704918, 'roc_auc': 0.8244444444444444, 'f1': 0.8648648648648649}
INFO: start train pipeline with params TrainingConfigParams(model_folder='LogReg', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True), model_params=ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.7540983606557377, 'roc_auc': 0.7427777777777778, 'f1': 0.7945205479452055}
INFO: start train pipeline with params TrainingConfigParams(model_folder='LogReg', input_data_file='heart.csv', model_file='model.pkl', metric_file='metrics.json', splitting_params=SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True), model_params=ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear'), metric_params=['accuracy', 'roc_auc', 'f1'], feature_params=FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target'), transformer_params=TransformerParams(file='transformer.pkl'), logging_config='logging.yaml')
INFO: transform the features FeatureParams(categorical=['sex', 'cp', 'fbs', 'exang', 'slope', 'ca', 'thal'], numerical=['age', 'trestbps', 'chol', 'restecg', 'thalach', 'oldpeak'], target='target')
INFO: splitted data SplittingParams(val_size=0.2, random_state=None, stratify=None, shuffle=True)
INFO: created model  ModelParams(model_type='LogisticRegression', n_estimators=100, n_iter=100, solver='liblinear')
INFO: train model
INFO: predict values
INFO: metrics are  {'accuracy': 0.8688524590163934, 'roc_auc': 0.8693548387096774, 'f1': 0.870967741935484}
